version: '3.4'

x-common:
  &common
  image: apache/airflow:2.3.0
  user: "${AIRFLOW_UID}:0"
  env_file: 
    - .env
  volumes:
    - ./:/opt/airflow/dags
    - ./volumes/airflow/logs:/opt/airflow/logs
    - ./volumes/airflow/plugins:/opt/airflow/plugins
    - /var/run/docker.sock:/var/run/docker.sock

x-depends-on:
  &depends-on
  depends_on:
    postgres-airflow:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

services:
  web:
    build: ./
    container_name: web
    environment:
      APP_NAME: Trip Map
      FLASK_ENV: development
      FLASK_DEBUG: 1
      SECRET_KEY: dev
      PORT: 8081
      FLASK_APP: app/src/entrypoint/web/main
    ports:
      - "8081:80"
    volumes:
      - "${PWD}:/app"
    command: flask run --host=0.0.0.0 --port 80
    depends_on:
      - neo4j

  neo4j:
      image: neo4j:5.4
      container_name: neo4j
      restart: unless-stopped
      ports:
        - 7474:7474
        - 7687:7687
      volumes:
        - ./volumes/neo4j/conf:/conf
        - ./volumes/neo4j/data:/data
        - ./volumes/neo4j/import:/import
        - ./volumes/neo4j/logs:/logs
        - ./volumes/neo4j/plugins:/plugins
      environment: 
        # Raise memory limits
        - NEO4J_dbms_memory_pagecache_size=1G
        - NEO4J_dbms.memory.heap.initial_size=1G
        - NEO4J_dbms_memory_heap_max__size=1G    

  postgres-airflow:
    image: postgres:13
    container_name: postgres-airflow
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    env_file:
      - .env

  scheduler-airflow:
    <<: *common
    <<: *depends-on
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"

  webserver-airflow:
    <<: *common
    <<: *depends-on
    container_name: airflow-webserver
    restart: always
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 5
  
  airflow-init:
    <<: *common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version